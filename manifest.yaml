apiVersion: apps/v1
kind: Deployment
metadata:
  name: !PROJECT_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: !PROJECT_NAME
      environment: !IMAGE_TAG
  template:
    metadata:
      labels:
        app: !PROJECT_NAME
        environment: !IMAGE_TAG
    spec:
      serviceAccountName: pod-reader-sa
      imagePullSecrets:
        - name: dustess-registry-ci-key
      containers:
        - image: registry-in.dustess.com:9000/!DOCKER_IMAGE_NAME:!IMAGE_TAG
          imagePullPolicy: Always
          name: !PROJECT_NAME
          ports:
            - containerPort: 5000
            - containerPort: 50000
          volumeMounts:
            - name: config-!PROJECT_NAME
              mountPath: /app/config.json
              subPath: config.json
          envFrom:
            - configMapRef:
                name: app-env-configmap
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "/app/pre-stop.sh"]
#          readinessProbe:
#            httpGet:
#              path: '/ready'
#              port: 5000
#              scheme: HTTP
#            initialDelaySeconds: 5
#            periodSeconds: 15
#            timeoutSeconds: 5
#          livenessProbe:
#            httpGet:
#              path: '/healthy'
#              port: 5000
#              scheme: HTTP
#            initialDelaySeconds: 5
#            periodSeconds: 15
#            timeoutSeconds: 5
      terminationGracePeriodSeconds: 31
      volumes:
        - name: config-!PROJECT_NAME
          configMap:
            name: config-!PROJECT_NAME
      nodeSelector:
        'mk.dustess.com/biz': "true"

---

apiVersion: v1
kind: Service
metadata:
  name: !PROJECT_NAME
  labels:
    svc: !PROJECT_NAME
spec:
  type: NodePort
  selector:
    app: !PROJECT_NAME
    environment: !IMAGE_TAG
  ports:
    - port: 5000
      protocol: TCP
      name: http
    - port: 50000
      protocol: TCP
      name: grpc
